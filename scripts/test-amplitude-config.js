// Script pour tester la configuration Amplitude
require('dotenv').config({ path: '.env.local' });

async function testAmplitudeConfig() {
  console.log('üß™ Test de configuration Amplitude\n');
  
  // 1. V√©rifier les variables d'environnement
  console.log('1Ô∏è‚É£ Variables d\'environnement:');
  const amplitudeApiKey = process.env.NEXT_PUBLIC_AMPLITUDE_API_KEY;
  const amplitudeSecretKey = process.env.AMPLITUDE_SECRET_KEY;
  
  console.log(`   NEXT_PUBLIC_AMPLITUDE_API_KEY: ${amplitudeApiKey ? amplitudeApiKey.substring(0, 10) + '...' : '‚ùå Manquante'}`);
  console.log(`   AMPLITUDE_SECRET_KEY: ${amplitudeSecretKey ? amplitudeSecretKey.substring(0, 10) + '...' : '‚ùå Manquante'}`);
  console.log('');
  
  if (!amplitudeApiKey || !amplitudeSecretKey) {
    console.log('‚ùå Configuration incompl√®te. Veuillez configurer vos cl√©s API Amplitude.');
    console.log('');
    console.log('üìã Instructions:');
    console.log('1. Cr√©ez un compte sur https://amplitude.com');
    console.log('2. Cr√©ez un nouveau projet');
    console.log('3. R√©cup√©rez votre API Key et Secret Key');
    console.log('4. Ajoutez-les dans .env.local:');
    console.log('   NEXT_PUBLIC_AMPLITUDE_API_KEY="votre-api-key"');
    console.log('   AMPLITUDE_SECRET_KEY="votre-secret-key"');
    return;
  }
  
  // 2. Test de l'API Amplitude
  console.log('2Ô∏è‚É£ Test de l\'API Amplitude:');
  console.log('');
  
  try {
    // Test de l'endpoint d'√©v√©nements
    console.log('   üîç Test Events API...');
    
    // Cr√©er un √©v√©nement de test
    const testEvent = {
      api_key: amplitudeApiKey,
      events: [{
        user_id: 'test_user_' + Date.now(),
        event_type: 'Test Event',
        time: Date.now(),
        event_properties: {
          test_property: 'test_value',
          property_id: 'test_property_123'
        }
      }]
    };
    
    const response = await fetch('https://api2.amplitude.com/2/httpapi', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testEvent)
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log('   ‚úÖ Events API fonctionne');
      console.log(`      Events ing√©r√©s: ${result.events_ingested || 0}`);
    } else {
      console.log('   ‚ùå Events API √©choue');
      console.log(`      Status: ${response.status}`);
      const errorText = await response.text();
      console.log(`      Erreur: ${errorText}`);
    }
    
  } catch (error) {
    console.log('   ‚ùå Erreur lors du test API:', error.message);
  }
  
  console.log('');
  
  // 3. Test de l'API Dashboard (pour la lecture)
  console.log('3Ô∏è‚É£ Test Dashboard API (lecture):');
  console.log('');
  
  try {
    console.log('   üîç Test Dashboard REST API...');
    
    // Test d'une requ√™te simple
    const endDate = new Date();
    const startDate = new Date();
    startDate.setDate(startDate.getDate() - 7);
    
    const query = {
      start: startDate.toISOString().split('T')[0],
      end: endDate.toISOString().split('T')[0]
    };
    
    const response = await fetch('https://amplitude.com/api/2/events/list', {
      method: 'POST',
      headers: {
        'Authorization': `Api-Key ${amplitudeSecretKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(query)
    });
    
    if (response.ok) {
      console.log('   ‚úÖ Dashboard API accessible');
    } else {
      console.log('   ‚ö†Ô∏è Dashboard API inaccessible (normal pour les comptes gratuits)');
      console.log(`      Status: ${response.status}`);
    }
    
  } catch (error) {
    console.log('   ‚ùå Erreur Dashboard API:', error.message);
  }
  
  console.log('');
  console.log('‚úÖ Tests termin√©s!');
  console.log('');
  console.log('üìã Prochaines √©tapes:');
  console.log('1. D√©ployez votre application avec les nouvelles cl√©s');
  console.log('2. Les √©v√©nements commenceront √† √™tre track√©s automatiquement');
  console.log('3. Consultez votre dashboard Amplitude: https://analytics.amplitude.com');
  console.log('4. Les analytics appara√Ætront dans votre interface apr√®s quelques √©v√©nements');
}

// Ex√©cuter les tests
testAmplitudeConfig().catch(console.error);